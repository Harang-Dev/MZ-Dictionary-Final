{"ast":null,"code":"var _jsxFileName = \"/Users/hyunwoo/Desktop/myfile/MZ-Dictionary-Final/front/src/components/SearchWord/CommentBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, Flex, Typography, Input, Button, Select } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardStyle = {\n  maxWidth: 1034,\n  width: \"100%\",\n  margin: \"0 auto\",\n  padding: 16,\n  backgroundColor: \"black\",\n  border: \"none\"\n};\nconst inputStyle = {\n  backgroundColor: \"#333\",\n  color: \"#fff\",\n  border: \"1px solid #555\",\n  borderRadius: \"4px\",\n  padding: \"8px\"\n};\nconst CommentBox = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [sortOption, setSortOption] = useState(\"latest\"); // 정렬 옵션\n\n  const handleAddComment = () => {\n    if (newComment.trim()) {\n      const newCommentData = {\n        text: newComment,\n        likeCount: 0,\n        // 좋아요 초기값\n        createdAt: new Date() // 생성 시간\n      };\n      setComments([newCommentData, ...comments]);\n      setNewComment(\"\");\n    }\n  };\n  const handleLike = index => {\n    const updatedComments = [...comments];\n    updatedComments[index].likeCount += 1; // 좋아요 수 증가\n    setComments(updatedComments);\n  };\n  const handleSortChange = value => {\n    setSortOption(value);\n  };\n  const sortedComments = comments.sort((a, b) => {\n    if (sortOption === \"latest\") {\n      return b.createdAt - a.createdAt; // 최신순 정렬\n    } else if (sortOption === \"likes\") {\n      return b.likeCount - a.likeCount; // 좋아요 순 정렬\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 4,\n      style: {\n        color: \"#fff\",\n        marginBottom: \"16px\"\n      },\n      children: \"\\uB313\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"end\",\n      style: {\n        marginBottom: \"16px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: sortOption,\n        onChange: handleSortChange,\n        style: {\n          width: 120\n        },\n        options: [{\n          value: \"latest\",\n          label: \"최신순\"\n        }, {\n          value: \"likes\",\n          label: \"좋아요 순\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"16px\"\n      },\n      children: sortedComments.map((comment, index) => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          backgroundColor: \"#222\",\n          border: \"none\",\n          marginBottom: \"8px\",\n          padding: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n          style: {\n            color: \"#fff\"\n          },\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"center\",\n          style: {\n            marginTop: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n            style: {\n              color: \"#aaa\"\n            },\n            children: [\"\\uC88B\\uC544\\uC694: \", comment.likeCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            style: {\n              color: \"#4096ff\",\n              padding: 0\n            },\n            onClick: () => handleLike(index),\n            children: \"\\uC88B\\uC544\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: inputStyle,\n        value: newComment,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: \"8px\"\n        },\n        onClick: handleAddComment,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentBox, \"sT3r55wi/xDKt2XNlyqHjQ/A7SI=\");\n_c = CommentBox;\nexport default CommentBox;\nvar _c;\n$RefreshReg$(_c, \"CommentBox\");","map":{"version":3,"names":["React","useState","Card","Flex","Typography","Input","Button","Select","jsxDEV","_jsxDEV","cardStyle","maxWidth","width","margin","padding","backgroundColor","border","inputStyle","color","borderRadius","CommentBox","_s","comments","setComments","newComment","setNewComment","sortOption","setSortOption","handleAddComment","trim","newCommentData","text","likeCount","createdAt","Date","handleLike","index","updatedComments","handleSortChange","value","sortedComments","sort","a","b","style","children","Title","level","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","justify","onChange","options","label","map","comment","Text","align","marginTop","type","onClick","placeholder","e","target","marginLeft","_c","$RefreshReg$"],"sources":["/Users/hyunwoo/Desktop/myfile/MZ-Dictionary-Final/front/src/components/SearchWord/CommentBox.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Flex, Typography, Input, Button, Select } from \"antd\";\n\nconst cardStyle = {\n  maxWidth: 1034,\n  width: \"100%\",\n  margin: \"0 auto\",\n  padding: 16,\n  backgroundColor: \"black\",\n  border: \"none\",\n};\n\nconst inputStyle = {\n  backgroundColor: \"#333\",\n  color: \"#fff\",\n  border: \"1px solid #555\",\n  borderRadius: \"4px\",\n  padding: \"8px\",\n};\n\nconst CommentBox = () => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [sortOption, setSortOption] = useState(\"latest\"); // 정렬 옵션\n\n  const handleAddComment = () => {\n    if (newComment.trim()) {\n      const newCommentData = {\n        text: newComment,\n        likeCount: 0, // 좋아요 초기값\n        createdAt: new Date(), // 생성 시간\n      };\n      setComments([newCommentData, ...comments]);\n      setNewComment(\"\");\n    }\n  };\n\n  const handleLike = (index) => {\n    const updatedComments = [...comments];\n    updatedComments[index].likeCount += 1; // 좋아요 수 증가\n    setComments(updatedComments);\n  };\n\n  const handleSortChange = (value) => {\n    setSortOption(value);\n  };\n\n  const sortedComments = comments.sort((a, b) => {\n    if (sortOption === \"latest\") {\n      return b.createdAt - a.createdAt; // 최신순 정렬\n    } else if (sortOption === \"likes\") {\n      return b.likeCount - a.likeCount; // 좋아요 순 정렬\n    }\n    return 0;\n  });\n\n  return (\n    <Card style={cardStyle}>\n      <Typography.Title level={4} style={{ color: \"#fff\", marginBottom: \"16px\" }}>\n        댓글\n      </Typography.Title>\n      <Flex justify=\"end\" style={{ marginBottom: \"16px\" }}>\n        <Select\n          value={sortOption}\n          onChange={handleSortChange}\n          style={{ width: 120 }}\n          options={[\n            { value: \"latest\", label: \"최신순\" },\n            { value: \"likes\", label: \"좋아요 순\" },\n          ]}\n        />\n      </Flex>\n      <div style={{ marginBottom: \"16px\" }}>\n        {sortedComments.map((comment, index) => (\n          <Card\n            key={index}\n            style={{\n              backgroundColor: \"#222\",\n              border: \"none\",\n              marginBottom: \"8px\",\n              padding: \"8px\",\n            }}\n          >\n            <Typography.Text style={{ color: \"#fff\" }}>{comment.text}</Typography.Text>\n            <Flex justify=\"space-between\" align=\"center\" style={{ marginTop: \"8px\" }}>\n              <Typography.Text style={{ color: \"#aaa\" }}>\n                좋아요: {comment.likeCount}\n              </Typography.Text>\n              <Button\n                type=\"link\"\n                style={{ color: \"#4096ff\", padding: 0 }}\n                onClick={() => handleLike(index)}\n              >\n                좋아요\n              </Button>\n            </Flex>\n          </Card>\n        ))}\n      </div>\n      <Flex justify=\"space-between\" align=\"center\">\n        <Input\n          style={inputStyle}\n          value={newComment}\n          placeholder=\"댓글을 입력하세요\"\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <Button type=\"primary\" style={{ marginLeft: \"8px\" }} onClick={handleAddComment}>\n          등록\n        </Button>\n      </Flex>\n    </Card>\n  );\n};\n\nexport default CommentBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}